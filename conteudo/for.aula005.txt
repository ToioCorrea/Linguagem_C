O LAÇO (loop) FOR

Sintaxe:
for (inicialização; condição; alteração)
{
instruções;
}

Ø inicialização: executada uma única vez antes do início do laço.
- Em geral é uma atribuição a uma variável de controle.

Ø condição(teste): avaliada toda vez que o laço for iniciado ou reiniciado. Se verdadeira, o corpo do laço é executado. Se falsa, o laço é encerrado e o controle passa para a instrução seguinte.
- Expressão lógica que controla o laço.

Ø alteração(incremento): executada sempre ao final de cada repetição do laço.
- Define a forma com que a variável de controle será alterada a cada repetição do laço.

//////////////////////////////////////////////////////////////////////////////////////////////////////

FOR : incremenro / decremento


ENTRADA:
#include <stdio.h>
int main()
{
int num;
for (num = 0; num <= 5; num++)
printf (" %d ", num);
return 0;
}
SAÍDA:
0 1 2 3 4 5

ENTRADA:
#include <stdio.h>
int main()
{
int num;
for (num = 5; num >= 0; num--)
printf (" %d ", num);
return 0;
}
SAÍDA:
5 4 3 2 1 0

//////////////////////////////////////////////////////////////////////////////////////////////////////

FOR : Multiplas expressões

Ø As múltiplas expressões são separadas por “,”.
Ø Elas são lidas da esquerda para a direita.

ENTRADA:
#include <stdio.h>
int main()
{
int x, y;
for (x = 0, y = 0; x + y < 100; x += 1, y += 1)
printf ("%d ", x + y);
return 0;
}
SAÍDA:
0 2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74  76 78 80 82 84 86 88 90 92 94 96 98

//////////////////////////////////////////////////////////////////////////////////////////////////////

FOR :  Associado a outros comandos

ENTRADA:
#include <stdio.h>
int main()
{
int x, y;
for (x = 0, y = 0; x + y < 100; x += 1, y += 1)
{
printf (" %2d ", x + y);
if (x % 10 == 0)
printf ("\n");
}
return 0;
}
SAÍDA:
0
 2  4 6  8 10 12  14 16 18 20
22 24 26 28 30 32 34 36 38 40
42 44 46 48 50 52 54 56 58 60 
62 64 66 68 70 72 74 76 78 80
82 84 86 88 90 92 94 96 98

//////////////////////////////////////////////////////////////////////////////////////////////////////

FOR : Com caracteres

ENTRADA:
#include <stdio.h>
int main()
{
char ch;
for (ch = 'a'; ch < 'e'; ch++)
printf (" O valor ASCII de %c é %d.\n", ch, ch);
return 0;
}
SAÍDA:
O valor de ASCII de a é 97.
O valor de ASCII de b é 98.
O valor de ASCII de c é 99.
O valor de ASCII de d é 100.

//////////////////////////////////////////////////////////////////////////////////////////////////////

FOR : Com funções

ENTRADA:
#include <stdio.h>
int main()
{
char ch;
printf ("A cada letra lida será exibida a sua sucessora. \n");
printf ("Pressione 'x' para sair. \n");
for (ch = getchar(); ch != 'x'; ch = getchar())
printf ("%c", ch+1);
return 0;
}
SAÍDA:
A cada letra lida será exibida a sua sucessora.
Pressione 'x' para sair.
a
b
 x

//////////////////////////////////////////////////////////////////////////////////////////////////////

For : Omitindo o corpo do laço 

ENTRADA:
#include <stdio.h>
int main()
{
char ch;
printf ("A cada letra lida será exibida a sua sucessora. \n");
printf ("Pressione 'x' para sair. \n");
for ( ; (ch = getchar()) != 'x'; printf ("%c", ch+1))
    ;
return 0;
}
SAÍDA:
A cada letra lida será exibida a sua sucessora.
Pressione 'x' para sair.
a
b
 x

//////////////////////////////////////////////////////////////////////////////////////////////////////

FOR :  Omitindo expressões

#include <stdio.h>
int main()
{
    for(;;)
        printf("Loop infinito\n");
    return 0;
}
SAÍDA:
Loop infinito
Loop infinito
Loop infinito
Loop infinito
Loop infinito
Loop infinito
...

Ø Os separadores (“;”) devem ser mantidos.

Ø Se a expressão de teste for omitida, ela é considerada permanentemente verdadeira.

//////////////////////////////////////////////////////////////////////////////////////////////////////

For : Exemplo Tabuada

ENTRADA:
#include <stdio.h>
int main()
{
int n , c;

printf("Digite um número entre 1 a 10: ");
scanf("%d", &n);
for(c=1 ; c<=10 ; c++)
    printf("\n%d x %2d = 2%d", n , c, n*c);

return 0;
}
SAÍDA:
Digite um número entre 1 a 10: 

2 x  1 =  2
2 x  2 =  4
...  n
2 x 10 = 20

//////////////////////////////////////////////////////////////////////////////////////////////////////

For : Encadeado

ENTRADA:
#include <stdio.h>
int main()
{
int n, c;

for(n=2 ; n<=9 ; n++)
{
    printf("\n");
    for(c=1; c<=10 ; c++)
    printf("\n%d x %2d = %2d", n , c , n*c);
}
return 0;

}

